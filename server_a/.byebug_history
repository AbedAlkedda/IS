q
    response.body[:movies_data_response][:movies_data_result][:movie_data][1]
    response.body[:movies_data_response][:movies_data_result][:movie_data]
    response.body[:movies_data_response][:movies_data_result][:movies_data]
    response.body[:movies_data_response][:movies_data_result].size
    response.body[:movies_data_response][:movies_data_result]
    response.body[:movies_data_response][:movies_data_result][1]
    response.body[:movies_data_response][:movies_data_result]
    response.body[:movies_data_response][:movies_data_result][:string]
 response.body
response = @client.call(:movies_data, message: { elements: count })
response.body
q
@client.call(:movies_data, message: { elements: 1 })
@client.call(:movies_data, message: { elements: 2 })
ap @client.call(:movies_data, message: { elements: 2 })
ap @client.call(:movies_data, message: { elements: 10 })
response
response.body
q
 response.body
ap @client.call(:movies_data, message: { elements: 10 })
ap @client.call(:movies_data, message: { elements: count })
ap response
response = @client.call(:movies_data, message: { elements: count })
ap response
apresponse
require 'awesome_print'
rquire 'awesome_print'
response
@client.call(:movies_data, message: { elements: 10 })
@client.call(:movies_data, message: { elements: 2 })
response.body
response.body[:movies_data_response][:movies_data_result]
response.body[:movies_data_response][:movies_data_result][:string]
q
cc[]q
a
cc << a
bb = ['1','2','3']
b = ['1','2','3']
a = [1,2,3,4]
c
b = ['1','2','3']
a = [1,2,3,4]
 SOAPClient.new('http://localhost:8000?wsdl')
require 'sinatra'
require_relative 'soap_client'
q
c
require 'soap_client'
require_relative 'soap_client'
 SOAPClient.new('http://localhost:8000?wsdl')
c
require 'soap_client'
